{"version":3,"sources":["const/Level.js","components/App/App.jsx","components/App/index.js","components/Store/Store.jsx","components/Store/index.js","components/Info/index.js","components/Info/Info.jsx","index.js"],"names":["plenty","message","style","level","some","few","empty","break","App","state","stores","boundary","onSearching","load","setState","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","fetch","then","response","json","jsonObject","forEach","element","distance","computeDistance","toFixed","remain_level","remain_stat","Level","push","sort","store1","store2","lat1","lng1","lat2","lng2","startLatRads","degreesToRadians","startLongRads","destLatRads","destLongRads","Math","acos","sin","cos","degrees","PI","selectChangeHandler","e","target","value","this","className","Form","Group","controlId","Control","as","custom","onChange","Button","variant","onClick","length","map","store","key","Component","getStyleByLevel","remainStat","getLinkInfo","name","linkToMap","window","open","linkToStoreInfo","Store","Card","width","border","Header","Body","Text","addr","size","Footer","Badge","pill","Info","Alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72d2149d.chunk.js","sourcesContent":["export default {\r\n  plenty: {message: '100개 이상', style: 'success', level: 5},\r\n  some: {message: '30 - 99', style: 'warning', level: 4},\r\n  few: {message: '2 - 29', style: 'danger', level: 3},\r\n  empty: {message: '0 - 1', style: 'dark', level: 2},\r\n  break: {message: '판매중지', style: 'secondary', level: 1}\r\n}","import React, {Component} from 'react'\nimport {Store, Info} from 'components'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button, Form} from 'react-bootstrap'\nimport Level from '../../const/Level'\n\nclass App extends Component {\n  state={stores: [], boundary: 500, onSearching: false}\n\n  componentDidMount() {\n    this.load()\n  }\n  \n  load = () => {\n    this.setState({onSearching: true})\n    navigator.geolocation.getCurrentPosition((pos) => {\n      const lat = pos.coords.latitude\n      const lng = pos.coords.longitude\n      \n      const {boundary} = this.state\n      const stores = []\n      fetch(`https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=${boundary}`)\n        .then(response => response.json())\n        .then(jsonObject => {\n          jsonObject.stores.forEach(element => {\n            element.distance = this.computeDistance(lat, lng, element.lat, element.lng).toFixed(2)\n            element.remain_level = element.remain_stat ? Level[element.remain_stat].level : 0\n            stores.push(element)\n          })\n          stores.sort((store1, store2) => {\n            if (store1.remain_level === store2.remain_level) {\n              return store1.distance >= store2.distance ? 1 : -1;  \n            }\n            return store1.remain_level < store2.remain_level ? 1 : -1;  \n          })\n          this.setState({stores, onSearching: false})\n        })\n    })\n  }\n\n  computeDistance = (lat1, lng1, lat2, lng2) => {\n    const startLatRads = this.degreesToRadians(lat1)\n    const startLongRads = this.degreesToRadians(lng1)\n    const destLatRads = this.degreesToRadians(lat2)\n    const destLongRads = this.degreesToRadians(lng2)\n\n    const Radius = 6371\n    return Math.acos(Math.sin(startLatRads) * Math.sin(destLatRads) +\n     Math.cos(startLatRads) * Math.cos(destLatRads) * Math.cos(startLongRads - destLongRads)) \n     * Radius\n  }\n\n  degreesToRadians = (degrees) => {\n    return (degrees * Math.PI) / 180\n  }\n\n  selectChangeHandler = (e) => {\n    this.setState({boundary: e.target.value})\n    this.load()\n  }\n\n  render() {\n    const {stores, onSearching} = this.state\n    return (\n      <div className=\"app\">\n        <Form.Group controlId=\"boundary-size-form\">\n          <Form.Control as=\"select\" custom=\"true\" onChange={this.selectChangeHandler}>\n            <option value=\"500\">0.5km</option>\n            <option value=\"1000\">1km</option>\n            <option value=\"2000\">2km</option>\n            <option value=\"3000\">3km</option>\n            <option value=\"4000\">4km</option>\n            <option value=\"5000\">5km</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"success\" onClick={this.load}>새로고침</Button>\n  \n        <div className=\"app-contents\">\n          {onSearching ? \n            <Info variant=\"primary\" message=\"공적마스크 판매 약국을 검색중입니다...\"/> : \n            stores.length === 0 ?\n              <Info \n                variant=\"warning\" \n                message=\"요청하신 범위 안에 공적마스크 판매 약국이 없습니다...\"\n              /> : \n              stores.map((store, key) => {\n                return (<Store key={key} store={store} />)})\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import App from './App'\r\nimport './App.css'\r\n\r\nexport default App","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Card, Button, Badge} from 'react-bootstrap'\r\nimport Level from '../../const/Level'\r\n\r\nexport default function Store({store}) {\r\n  return (\r\n    <div className=\"store\">\r\n      <Card style={{ width: '20rem' }} border={getStyleByLevel(store.remain_stat)}>\r\n        <Card.Header>{store.name}</Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {store.addr}\r\n          </Card.Text>\r\n          <Button variant={getStyleByLevel(store.remain_stat)} size=\"sm\" name={getLinkInfo(store)} onClick={linkToMap}>지도에서 보기</Button>&nbsp;\r\n          <Button variant={getStyleByLevel(store.remain_stat)} size=\"sm\" name={store.name} onClick={linkToStoreInfo}>정보검색</Button>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Badge pill variant={getStyleByLevel(store.remain_stat)}>{store.distance}km</Badge>&nbsp;\r\n          <Badge pill variant={getStyleByLevel(store.remain_stat)}>\r\n            {Level[store.remain_stat] ? Level[store.remain_stat].message : '정보없음'}\r\n          </Badge>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getStyleByLevel(remainStat) {\r\n  return Level[remainStat] ? Level[remainStat].style : 'secondary'\r\n}\r\n\r\nfunction getLinkInfo(store) {\r\n  return store.name + ',' + store.lat + ',' + store.lng \r\n}\r\n\r\nfunction linkToMap(e) {\r\n  window.open(`https://map.kakao.com/link/map/${e.target.name}`)\r\n}\r\n\r\nfunction linkToStoreInfo(e) {\r\n  window.open(`https://map.kakao.com/link/search/${e.target.name} 공적판매처`)\r\n}","import Store from './Store'\r\nimport './Store.css'\r\n\r\nexport default Store","import Info from './Info'\nimport './Info.css'\n\nexport default Info","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Alert} from 'react-bootstrap'\n\nexport default function Info({variant, message}) {\n  return (\n    <div className=\"info\">\n      <Alert variant={variant}>{message}</Alert>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {App} from './components'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}