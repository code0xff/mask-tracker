{"version":3,"sources":["const/Level.js","components/App/App.jsx","components/App/index.js","components/Store/Store.jsx","components/Store/index.js","components/Info/index.js","components/Info/Info.jsx","index.js"],"names":["plenty","message","style","level","some","few","empty","break","App","state","stores","storeCodeList","distance","onSearching","search","setState","load","navigator","geolocation","getCurrentPosition","pos","latitude","coords","longitude","extendedStores","fetch","then","response","json","jsonObject","forEach","element","selectedStoreIndex","indexOf","code","toFixed","remain_level","remain_stat","Level","push","sort","store1","store2","storeCodeListForCheck","map","store","this","className","Button","onClick","variant","length","key","Component","getStyleByLevel","remainStat","getLinkInfo","name","lat","lng","linkToMap","e","window","open","target","linkToStoreInfo","Store","Card","width","border","Header","Body","Text","addr","size","Footer","Badge","pill","Info","Alert","ReactDOM","render","document","getElementById"],"mappings":"yTAAe,GACbA,OAAQ,CAACC,QAAS,yBAAWC,MAAO,UAAWC,MAAO,GACtDC,KAAM,CAACH,QAAS,UAAWC,MAAO,UAAWC,MAAO,GACpDE,IAAK,CAACJ,QAAS,SAAUC,MAAO,SAAUC,MAAO,GACjDG,MAAO,CAACL,QAAS,QAASC,MAAO,OAAQC,MAAO,GAChDI,MAAO,CAACN,QAAS,2BAAQC,MAAO,YAAaC,MAAO,ICuEvCK,E,2MArEbC,MAAM,CAACC,OAAQ,GAAIC,cAAe,GAAIC,SAAU,IAAKC,aAAa,G,EAMlEC,OAAS,WAAO,IACPF,EAAY,EAAKH,MAAjBG,SACHA,EAAW,KAAO,KACpB,EAAKG,SAAS,CAACH,SAAUA,EAAW,MAEtC,EAAKI,Q,EAGPA,KAAO,WACL,EAAKD,SAAS,CAACF,aAAa,IAC5BI,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAMC,EAAWD,EAAIE,OAAOD,SACtBE,EAAYH,EAAIE,OAAOC,UAFmB,EAIN,EAAKd,MAAxCG,EAJyC,EAIzCA,SAAUF,EAJ+B,EAI/BA,OAAQC,EAJuB,EAIvBA,cACnBa,EAAiBd,EAEvBe,MAAM,8EAAD,OAA+EJ,EAA/E,gBAA+FE,EAA/F,cAA8GX,IAChHc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJA,EAAWnB,OAAOoB,SAAQ,SAAAC,GACxB,IAAMC,EAAqBrB,EAAcsB,QAAQF,EAAQG,OAC7B,IAAxBF,GACFD,EAAQnB,UAAYA,EAAW,KAAMuB,QAAQ,GAC7CJ,EAAQK,aAAeL,EAAQM,YAAcC,EAAMP,EAAQM,aAAalC,MAAQ,EAChFqB,EAAee,KAAKR,KAEpBP,EAAeQ,GAAoBK,YAAcN,EAAQM,YACzDb,EAAeQ,GAAoBI,aAAeL,EAAQM,YAAcC,EAAMP,EAAQM,aAAalC,MAAQ,MAG/GqB,EAAegB,MAAK,SAACC,EAAQC,GAC3B,OAAOD,EAAOL,cAAgBM,EAAON,aAAe,GAAK,KAE3D,IAAMO,EAAwBnB,EAAeoB,KAAI,SAAAC,GAAK,OAAIA,EAAMX,QAChE,EAAKnB,SAAS,CAACL,OAAQc,EAAgBX,aAAa,EAAOF,cAAegC,W,mFAtChFG,KAAK9B,S,+BA2CG,IAAD,EACiC8B,KAAKrC,MAAtCC,EADA,EACAA,OAAQE,EADR,EACQA,SAAUC,EADlB,EACkBA,YACzB,OACE,yBAAKkC,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,QAASH,KAAKhC,OAAQZ,MAAO,CAAC,aAAgB,WAAtD,kDAA8EU,EAAW,KAAMuB,QAAQ,GAAvG,OACA,kBAACa,EAAA,EAAD,CAAQE,QAAQ,UAAUD,QAASH,KAAK9B,MAAxC,4BACA,yBAAK+B,UAAU,gBACZlC,EACC,kBAAC,EAAD,CAAMqC,QAAQ,UAAUjD,QAAQ,2GACd,IAAlBS,EAAOyC,OACL,kBAAC,EAAD,CACED,QAAQ,UACRjD,QAAQ,4GAEVS,EAAOkC,KAAI,SAACC,EAAOO,GACjB,OAAQ,kBAAC,EAAD,CAAOA,IAAKA,EAAKP,MAAOA,a,GA9D9BQ,aCHH7C,G,MAAAA,G,gBCyBf,SAAS8C,EAAgBC,GACvB,OAAOjB,EAAMiB,GAAcjB,EAAMiB,GAAYrD,MAAQ,YAGvD,SAASsD,EAAYX,GACnB,OAAOA,EAAMY,KAAO,IAAMZ,EAAMa,IAAM,IAAMb,EAAMc,IAGpD,SAASC,EAAUC,GACjBC,OAAOC,KAAP,yCAA8CF,EAAEG,OAAOP,OAGzD,SAASQ,EAAgBJ,GACvBC,OAAOC,KAAP,4CAAiDF,EAAEG,OAAOP,KAA1D,oC,UCtCaS,EDEA,YAAyB,IAATrB,EAAQ,EAARA,MAC7B,OACE,yBAAKE,UAAU,SACb,kBAACoB,EAAA,EAAD,CAAMjE,MAAO,CAAEkE,MAAO,SAAWC,OAAQf,EAAgBT,EAAMR,cAC7D,kBAAC8B,EAAA,EAAKG,OAAN,KAAczB,EAAMY,MACpB,kBAACU,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,KACG3B,EAAM4B,MAET,kBAACzB,EAAA,EAAD,CAAQE,QAASI,EAAgBT,EAAMR,aAAcqC,KAAK,KAAKjB,KAAMD,EAAYX,GAAQI,QAASW,GAAlG,yCAJF,OAKE,kBAACZ,EAAA,EAAD,CAAQE,QAASI,EAAgBT,EAAMR,aAAcqC,KAAK,KAAKjB,KAAMZ,EAAMY,KAAMR,QAASgB,GAA1F,6BAEF,kBAACE,EAAA,EAAKQ,OAAN,KACE,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAAC3B,QAASI,EAAgBT,EAAMR,cAAeQ,EAAMjC,SAAhE,MADF,OAEE,kBAACgE,EAAA,EAAD,CAAOC,MAAI,EAAC3B,QAASI,EAAgBT,EAAMR,cACxCC,EAAMO,EAAMR,aAAeC,EAAMO,EAAMR,aAAapC,QAAU,gC,kBEjB5D6E,ECCA,YAAmC,IAApB5B,EAAmB,EAAnBA,QAASjD,EAAU,EAAVA,QACrC,OACE,yBAAK8C,UAAU,QACb,kBAACgC,EAAA,EAAD,CAAO7B,QAASA,GAAUjD,KCHhC+E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c8b0165b.chunk.js","sourcesContent":["export default {\r\n  plenty: {message: '100개 이상', style: 'success', level: 5},\r\n  some: {message: '30 - 99', style: 'warning', level: 4},\r\n  few: {message: '2 - 29', style: 'danger', level: 3},\r\n  empty: {message: '0 - 1', style: 'dark', level: 2},\r\n  break: {message: '판매중지', style: 'secondary', level: 1}\r\n}","import React, {Component} from 'react'\nimport {Store, Info} from 'components'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from 'react-bootstrap'\nimport Level from '../../const/Level'\n\nclass App extends Component {\n  state={stores: [], storeCodeList: [], distance: 500, onSearching: false}\n\n  componentDidMount() {\n    this.load()\n  }\n  \n  search = () => {\n    const {distance} = this.state\n    if (distance + 500 <= 5000) {\n      this.setState({distance: distance + 500})\n    }\n    this.load()\n  }\n\n  load = () => {\n    this.setState({onSearching: true})\n    navigator.geolocation.getCurrentPosition((pos) => {\n      const latitude = pos.coords.latitude\n      const longitude = pos.coords.longitude\n\n      const {distance, stores, storeCodeList} = this.state\n      const extendedStores = stores\n    \n      fetch(`https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${latitude}&lng=${longitude}&m=${distance}`)\n        .then(response => response.json())\n        .then(jsonObject => {\n          jsonObject.stores.forEach(element => {\n            const selectedStoreIndex = storeCodeList.indexOf(element.code)\n            if (selectedStoreIndex === -1) {\n              element.distance = (distance / 1000).toFixed(1)\n              element.remain_level = element.remain_stat ? Level[element.remain_stat].level : 0\n              extendedStores.push(element)\n            } else {\n              extendedStores[selectedStoreIndex].remain_stat = element.remain_stat\n              extendedStores[selectedStoreIndex].remain_level = element.remain_stat ? Level[element.remain_stat].level : 0\n            }\n          })\n          extendedStores.sort((store1, store2) => {\n            return store1.remain_level <= store2.remain_level ? 1 : -1;  \n          })\n          const storeCodeListForCheck = extendedStores.map(store => store.code)\n          this.setState({stores: extendedStores, onSearching: false, storeCodeList: storeCodeListForCheck})\n        })\n    })\n  }\n\n  render() {\n    const {stores, distance, onSearching} = this.state\n    return (\n      <div className=\"app\">\n        <Button onClick={this.search} style={{'marginBottom': '0.5rem'}}>더 넓게 찾아보기 [{(distance / 1000).toFixed(1)}km]</Button>\n        <Button variant=\"success\" onClick={this.load}>새로고침</Button>\n        <div className=\"app-contents\">\n          {onSearching ? \n            <Info variant=\"primary\" message=\"공적마스크 판매 약국을 검색중입니다...\"/> : \n            stores.length === 0 ?\n              <Info \n                variant=\"warning\" \n                message=\"더 넓게 찾아보기로 추가 검색해보세요...\"\n              /> : \n              stores.map((store, key) => {\n                return (<Store key={key} store={store} />)})\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import App from './App'\r\nimport './App.css'\r\n\r\nexport default App","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Card, Button, Badge} from 'react-bootstrap'\r\nimport Level from '../../const/Level'\r\n\r\nexport default function Store({store}) {\r\n  return (\r\n    <div className=\"store\">\r\n      <Card style={{ width: '20rem' }} border={getStyleByLevel(store.remain_stat)}>\r\n        <Card.Header>{store.name}</Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {store.addr}\r\n          </Card.Text>\r\n          <Button variant={getStyleByLevel(store.remain_stat)} size=\"sm\" name={getLinkInfo(store)} onClick={linkToMap}>지도에서 보기</Button>&nbsp;\r\n          <Button variant={getStyleByLevel(store.remain_stat)} size=\"sm\" name={store.name} onClick={linkToStoreInfo}>정보검색</Button>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Badge pill variant={getStyleByLevel(store.remain_stat)}>{store.distance}km</Badge>&nbsp;\r\n          <Badge pill variant={getStyleByLevel(store.remain_stat)}>\r\n            {Level[store.remain_stat] ? Level[store.remain_stat].message : '정보없음'}\r\n          </Badge>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getStyleByLevel(remainStat) {\r\n  return Level[remainStat] ? Level[remainStat].style : 'secondary'\r\n}\r\n\r\nfunction getLinkInfo(store) {\r\n  return store.name + ',' + store.lat + ',' + store.lng \r\n}\r\n\r\nfunction linkToMap(e) {\r\n  window.open(`https://map.kakao.com/link/map/${e.target.name}`)\r\n}\r\n\r\nfunction linkToStoreInfo(e) {\r\n  window.open(`https://map.kakao.com/link/search/${e.target.name} 공적판매처`)\r\n}","import Store from './Store'\r\nimport './Store.css'\r\n\r\nexport default Store","import Info from './Info'\nimport './Info.css'\n\nexport default Info","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Alert} from 'react-bootstrap'\n\nexport default function Info({variant, message}) {\n  return (\n    <div className=\"info\">\n      <Alert variant={variant}>{message}</Alert>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {App} from './components'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}